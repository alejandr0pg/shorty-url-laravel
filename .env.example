# ==============================================
# SHRT - URL Shortener Configuration
# ==============================================
# Copiar este archivo como .env y configurar según el entorno

# ----------------------------------------------
# Application Settings
# ----------------------------------------------
APP_NAME=SHRT
APP_ENV=local
# Generar con: php artisan key:generate
APP_KEY=
APP_DEBUG=true
APP_URL=http://localhost:8000
APP_TIMEZONE=UTC

APP_LOCALE=en
APP_FALLBACK_LOCALE=en
APP_FAKER_LOCALE=en_US

APP_MAINTENANCE_DRIVER=file
# APP_MAINTENANCE_STORE=database

PHP_CLI_SERVER_WORKERS=4

# ----------------------------------------------
# Security
# ----------------------------------------------
BCRYPT_ROUNDS=12

# ----------------------------------------------
# Logging
# ----------------------------------------------
LOG_CHANNEL=stack
LOG_STACK=single
LOG_DEPRECATIONS_CHANNEL=null
LOG_LEVEL=debug

# Production: usar 'stderr' para CloudWatch
# LOG_CHANNEL=stderr
# LOG_LEVEL=error

# ----------------------------------------------
# Database Configuration
# ----------------------------------------------
# Local Development (SQLite)
DB_CONNECTION=sqlite
DB_DATABASE=/ruta/completa/a/database/database.sqlite

# Production (MySQL/RDS)
# DB_CONNECTION=mysql
# DB_HOST=127.0.0.1
# DB_PORT=3306
# DB_DATABASE=shrt
# DB_USERNAME=admin
# DB_PASSWORD=

# AWS RDS Example
# DB_HOST=shrt-production-db.cyn62qqm4nbb.us-east-1.rds.amazonaws.com
# DB_DATABASE=shrt
# DB_USERNAME=admin
# DB_PASSWORD=tu_password_seguro

# ----------------------------------------------
# Session & Cache
# ----------------------------------------------
SESSION_DRIVER=database
SESSION_LIFETIME=120
SESSION_ENCRYPT=false
SESSION_PATH=/
SESSION_DOMAIN=null

# Cache Driver (file, database, redis)
CACHE_STORE=redis
# CACHE_PREFIX=

# Production con Redis
# CACHE_STORE=redis
# SESSION_DRIVER=redis

# ----------------------------------------------
# Broadcasting & Queue
# ----------------------------------------------
BROADCAST_CONNECTION=log
QUEUE_CONNECTION=database

# Production: usar Redis o SQS
# QUEUE_CONNECTION=redis
# QUEUE_CONNECTION=sqs

# ----------------------------------------------
# Filesystem
# ----------------------------------------------
FILESYSTEM_DISK=local

# Production: usar S3
# FILESYSTEM_DISK=s3
# AWS_ACCESS_KEY_ID=
# AWS_SECRET_ACCESS_KEY=
# AWS_DEFAULT_REGION=us-east-1
# AWS_BUCKET=
# AWS_USE_PATH_STYLE_ENDPOINT=false

# ----------------------------------------------
# Redis Configuration
# ----------------------------------------------
REDIS_CLIENT=phpredis
REDIS_HOST=127.0.0.1
REDIS_PASSWORD=null
REDIS_PORT=6379

# AWS ElastiCache Example
# REDIS_HOST=shrt-production-redis.q4spdi.ng.0001.use1.cache.amazonaws.com
# REDIS_PORT=6379

# ----------------------------------------------
# Memcached (si se usa en lugar de Redis)
# ----------------------------------------------
MEMCACHED_HOST=127.0.0.1

# ----------------------------------------------
# Mail Configuration
# ----------------------------------------------
MAIL_MAILER=log
MAIL_SCHEME=null
MAIL_HOST=127.0.0.1
MAIL_PORT=2525
MAIL_USERNAME=null
MAIL_PASSWORD=null
MAIL_FROM_ADDRESS="hello@example.com"
MAIL_FROM_NAME="${APP_NAME}"

# Production: usar SES o SMTP
# MAIL_MAILER=ses
# MAIL_FROM_ADDRESS=noreply@tudominio.com

# ----------------------------------------------
# AWS Configuration
# ----------------------------------------------
AWS_ACCESS_KEY_ID=
AWS_SECRET_ACCESS_KEY=
AWS_DEFAULT_REGION=us-east-1
AWS_BUCKET=
AWS_USE_PATH_STYLE_ENDPOINT=false

# ----------------------------------------------
# Vite (Frontend Build)
# ----------------------------------------------
VITE_APP_NAME="${APP_NAME}"

# ----------------------------------------------
# API Documentation (Scribe)
# ----------------------------------------------
# La documentación se genera automáticamente
# Acceder en: /docs
# OpenAPI spec: /docs/openapi
# Postman collection: /docs/postman

# ----------------------------------------------
# Production Environment Variables
# ----------------------------------------------
# Usar estas configuraciones en AWS ECS Task Definition:

# APP_ENV=production
# APP_DEBUG=false
# APP_URL=http://tu-alb-dns.elb.amazonaws.com
# LOG_CHANNEL=stderr
# LOG_LEVEL=error
# DB_CONNECTION=mysql
# DB_HOST=tu-rds-endpoint.rds.amazonaws.com
# CACHE_STORE=redis
# SESSION_DRIVER=redis
# REDIS_HOST=tu-redis-endpoint.cache.amazonaws.com

# ----------------------------------------------
# Docker Configuration
# ----------------------------------------------
# Variables específicas para docker-compose local
# MYSQL_ROOT_PASSWORD=secret
# MYSQL_DATABASE=shrt
# MYSQL_USER=shrt
# MYSQL_PASSWORD=secret

# ----------------------------------------------
# GitHub Actions Secrets
# ----------------------------------------------
# Configurar en: Repository Settings → Secrets and Variables → Actions
# - AWS_ACCOUNT_ID
# - AWS_REGION
# - ECR_REPOSITORY
# - ECS_CLUSTER_PRODUCTION
# - ECS_SERVICE_PRODUCTION
# - TARGET_GROUP_ARN
# - ALB_DNS_NAME
# - DB_PASSWORD
