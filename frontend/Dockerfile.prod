# Multi-stage build optimized for AWS S3 deployment
FROM node:18-alpine as builder

# Set working directory
WORKDIR /app

# Copy package files for better layer caching
COPY package*.json ./

# Install dependencies (including devDependencies for build)
RUN npm ci --include=dev

# Copy source code
COPY . .

# Build arguments for different environments
ARG BUILD_ENV=production
ARG VITE_API_URL
ARG VITE_APP_ENV

# Set environment variables
ENV NODE_ENV=production
ENV VITE_API_URL=${VITE_API_URL}
ENV VITE_APP_ENV=${VITE_APP_ENV}

# Build the application with optimizations
RUN if [ "$BUILD_ENV" = "staging" ]; then \
        npm run build:staging; \
    else \
        npm run build:production; \
    fi

# Optimize built files for S3
RUN find dist -name "*.js" -o -name "*.css" | xargs gzip -k -9
RUN find dist -name "*.html" -o -name "*.json" | xargs gzip -k -9

# Production stage with Nginx (for local testing)
FROM nginx:alpine as nginx-server

# Install curl for health checks
RUN apk add --no-cache curl

# Copy built application
COPY --from=builder /app/dist /usr/share/nginx/html

# Copy optimized nginx configuration
COPY docker/nginx.conf /etc/nginx/nginx.conf

# Create nginx cache directory and set permissions
RUN mkdir -p /var/cache/nginx/client_temp && \
    chown -R nginx:nginx /var/cache/nginx && \
    chown -R nginx:nginx /usr/share/nginx/html && \
    chmod -R 755 /usr/share/nginx/html

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD curl -f http://localhost/health || exit 1

# Expose port
EXPOSE 80

# Start nginx
CMD ["nginx", "-g", "daemon off;"]

# S3 deployment stage (just the built files with compression)
FROM scratch as s3-assets
COPY --from=builder /app/dist /

# AWS CLI stage for deployment
FROM amazon/aws-cli:latest as deployer

# Install additional tools
RUN yum update -y && \
    yum install -y gzip curl

# Copy built assets
COPY --from=builder /app/dist /app/dist

# Default deployment script
COPY deploy-s3.sh /deploy.sh
RUN chmod +x /deploy.sh

# Environment variables for deployment
ENV AWS_DEFAULT_REGION=us-east-1
ENV S3_BUCKET=""
ENV CLOUDFRONT_DISTRIBUTION_ID=""

ENTRYPOINT ["/deploy.sh"]